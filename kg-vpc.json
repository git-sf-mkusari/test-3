{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "This template creates vpc with public and private subnets, along with some security groups. I have not used paramaters,have hard coded various values, for the purposes of this exercise",
  "Resources": {
      "VPC": {
          "Type": "AWS::EC2::VPC",
          "Properties": {
              "CidrBlock": "10.0.0.0/16",
              "EnableDnsHostnames": true,
              "EnableDnsSupport": true,
              "InstanceTenancy": "default",
              "Tags": [
                  {
                      "Key": "Name",
                      "Value": "kg-vpc"
                  }
              ]
          }
      },
      "InternetGateway": {
          "Type": "AWS::EC2::InternetGateway",
          "Properties": {
              "Tags": [
                  {
                      "Key": "Name",
                      "Value": "kg IGW"
                  }
              ]
          }
      },
      "InternetGatewayAttachment": {
          "Type": "AWS::EC2::VPCGatewayAttachment",
          "Properties": {
              "InternetGatewayId": {
                  "Ref": "InternetGateway"
              },
              "VpcId": {
                  "Ref": "VPC"
              }
          }
      },
      "PublicSubnet1": {
          "Type": "AWS::EC2::Subnet",
          "Properties": {
              "AvailabilityZone": {
                  "Fn::Select": [
                      0,
                      {
                          "Fn::GetAZs": ""
                      }
                  ]
              },
              "CidrBlock": "10.0.0.0/24",
              "MapPublicIpOnLaunch": true,
              "Tags": [
                  {
                      "Key": "Name",
                      "Value": "Public Subnet 1"
                  }
              ],
              "VpcId": {
                  "Ref": "VPC"
              }
          }
      },
      "PublicSubnet2": {
          "Type": "AWS::EC2::Subnet",
          "Properties": {
              "AvailabilityZone": {
                  "Fn::Select": [
                      1,
                      {
                          "Fn::GetAZs": ""
                      }
                  ]
              },
              "CidrBlock": "10.0.1.0/24",
              "MapPublicIpOnLaunch": true,
              "Tags": [
                  {
                      "Key": "Name",
                      "Value": "Public Subnet 2"
                  }
              ],
              "VpcId": {
                  "Ref": "VPC"
              }
          }
      },
      "PublicRouteTable": {
          "Type": "AWS::EC2::RouteTable",
          "Properties": {
              "Tags": [
                  {
                      "Key": "Name",
                      "Value": "Public Route Table"
                  }
              ],
              "VpcId": {
                  "Ref": "VPC"
              }
          }
      },
      "PublicRoute": {
          "Type": "AWS::EC2::Route",
          "Properties": {
              "DestinationCidrBlock": "0.0.0.0/0",
              "GatewayId": {
                  "Ref": "InternetGateway"
              },
              "RouteTableId": {
                  "Ref": "PublicRouteTable"
              }
          }
      },
      "PublicSubnet1RouteTableAssociation": {
          "Type": "AWS::EC2::SubnetRouteTableAssociation",
          "Properties": {
              "RouteTableId": {
                  "Ref": "PublicRouteTable"
              },
              "SubnetId": {
                  "Ref": "PublicSubnet1"
              }
          }
      },
      "PublicSubnet2RouteTableAssociation": {
          "Type": "AWS::EC2::SubnetRouteTableAssociation",
          "Properties": {
              "RouteTableId": {
                  "Ref": "PublicRouteTable"
              },
              "SubnetId": {
                  "Ref": "PublicSubnet2"
              }
          }
      },
      "ALBSecurityGroup": {
          "Type": "AWS::EC2::SecurityGroup",
          "Properties": {
              "GroupDescription": "Enable HTTP access on port 80",
              "SecurityGroupIngress": [
                  {
                      "IpProtocol": "tcp",
                      "FromPort": "80",
                      "ToPort": "80",
                      "CidrIp": "0.0.0.0/0"
                  }
              ],
              "Tags": [
                  {
                      "Key": "Name",
                      "Value": "ALB Security Group"
                  }
              ],
              "VpcId": {
                  "Ref": "VPC"
              }
          }
      },
      "EC2SecurityGroup": {
          "Type": "AWS::EC2::SecurityGroup",
          "Properties": {
              "GroupDescription": "Enable HTTP access via port 80 locked down to the load balancer SG + SSH access via port 22 opened to the public",
              "SecurityGroupIngress": [
                  {
                      "IpProtocol": "tcp",
                      "FromPort": 80,
                      "ToPort": 80,
                      "SourceSecurityGroupId": {
                          "Ref": "ALBSecurityGroup"
                      }
                  },
                  {
                      "IpProtocol": "tcp",
                      "FromPort": 22,
                      "ToPort": 22,
                      "CidrIp": "0.0.0.0/0"
                  }
              ],
              "Tags": [
                  {
                      "Key": "Name",
                      "Value": "WebServer Security Group"
                  }
              ],
              "VpcId": {
                  "Ref": "VPC"
              }
          }
      }
  },
  "Outputs": {
      "VPC": {
          "Description": "VPC ID",
          "Export": {
              "Name": {
                  "Fn::Sub": "${AWS::StackName}-VPC"
              }
          },
          "Value": {
              "Ref": "VPC"
          }
      },
      "PublicSubnet1": {
          "Description": "Public Subnet 1",
          "Export": {
              "Name": {
                  "Fn::Sub": "${AWS::StackName}-PublicSubnet1"
              }
          },
          "Value": {
              "Ref": "PublicSubnet1"
          }
      },
      "PublicSubnet2": {
          "Description": "Public Subnet 2",
          "Export": {
              "Name": {
                  "Fn::Sub": "${AWS::StackName}-PublicSubnet2"
              }
          },
          "Value": {
              "Ref": "PublicSubnet2"
          }
      },
      "ALBSecurityGroup": {
          "Description": "Application Load Balancer Security Group ID",
          "Export": {
              "Name": {
                  "Fn::Sub": "${AWS::StackName}-ALBSecurityGroup"
              }
          },
          "Value": {
              "Ref": "ALBSecurityGroup"
          }
      },
      "EC2SecurityGroup": {
          "Description": "Webserver Security Group ID",
          "Export": {
              "Name": {
                  "Fn::Sub": "${AWS::StackName}-EC2SecurityGroup"
              }
          },
          "Value": {
              "Ref": "EC2SecurityGroup"
          }
      }
  }
}